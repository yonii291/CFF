const t=()=>new Promise((t,e)=>navigator.geolocation.getCurrentPosition(t,e)),e=(t,e)=>{document.querySelector(".min").textContent=`${t}\xb0C`,document.querySelector(".max").textContent=`${e}\xb0C`},a=t=>{let{stationboard:e}=t,a=e.map(t=>{let e=new Date(t.stop.departure),a=e.getHours(),n=e.getMinutes(),r=10>e.getHours()?"0"+a:a,o=10>e.getMinutes()?"0"+n:n;return{departure:`${r}:${o}`,destination:t.to,category:t.category}});return{station:t.station.name,departures:a}},n=t=>{let e=document.querySelector(".departures"),a=`
    <article>
        <div class="time">${t.departure}</div>
        <div class="category" data-category="${t.category}">${t.category}</div>
        <div class="destination">${t.destination}</div>
    </article>
    `;e.insertAdjacentHTML("beforeend",a)},r=t=>{document.querySelector(".departures header p").textContent=t};(async()=>{let e=await t();return{lat:e.coords.latitude,long:e.coords.longitude}})().then(t=>{console.log(t),fetch(`https://api.open-meteo.com/v1/forecast?latitude=${t.lat}&longitude=${t.long}&daily=apparent_temperature_max,apparent_temperature_min&timezone=auto`).then(t=>t.json()).then(t=>e(t.daily.apparent_temperature_min[0],t.daily.apparent_temperature_max[0])),fetch(`http://transport.opendata.ch/v1/locations?x=${t.lat}&y=${t.long}&type=station`).then(t=>t.json()).then(t=>{let e=t.stations.filter(t=>"train"===t.icon);if(!e[0])throw Error("pas de train");let a=e[0].name;return r(a),fetch(`http://transport.opendata.ch/v1/stationboard?station=${a}&limit=5`)}).then(t=>t.json()).then(t=>{a(t).departures.forEach(t=>{n(t)})}).catch(t=>{r(t.message)})});
//# sourceMappingURL=index.6a68993a.js.map
